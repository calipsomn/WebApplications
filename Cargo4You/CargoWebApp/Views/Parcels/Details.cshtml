@model CargoWebApp.ViewModels.ParcelViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div  id="parcelDetails">
    <h4>Parcel</h4>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Weight)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Weight)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Width)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Width)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Height)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Height)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Depth)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Depth)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Fragile)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Fragile)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Hazardous)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Hazardous)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Perishable)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Perishable)
        </dd>

    </dl>
    <div class="col-md-2 col-md-offset-2 bg-info">
        <upsert-cart-item params="cartItem: cartItem, showButton: true"></upsert-cart-item>
    </div>
</div>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to Parcels", "Index") 
</p>
@Html.Partial("_CartItemForm")
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval", "/Scripts/ViewModels/ParcelDetailViewModel.js",
    "/Scripts/ViewModels/ParcelViewModel.js", "~/Scripts/ViewModels/CartItemViewModel.js")
    <script>
        var model = @Html.HtmlConvertToJson(Model);

        var parcelDetailViewModel = new ParcelDetailViewModel(model);
        ko.applyBindings(parcelDetailViewModel, document.getElementById("parcelDetails"));
    </script>
}
